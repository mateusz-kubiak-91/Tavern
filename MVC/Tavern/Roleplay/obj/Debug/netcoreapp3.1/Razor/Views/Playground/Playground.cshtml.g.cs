#pragma checksum "D:\CL\Projekty\Tawerna\MVC\Tavern\Roleplay\Views\Playground\Playground.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bebc53f6671b51172c1e118e513aab27cbeff276"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Playground_Playground), @"mvc.1.0.view", @"/Views/Playground/Playground.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\CL\Projekty\Tawerna\MVC\Tavern\Roleplay\Views\_ViewImports.cshtml"
using Roleplay.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CL\Projekty\Tawerna\MVC\Tavern\Roleplay\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bebc53f6671b51172c1e118e513aab27cbeff276", @"/Views/Playground/Playground.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74724fcda7c00c5cbfee963d9910877670a54f46", @"/Views/_ViewImports.cshtml")]
    public class Views_Playground_Playground : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Playground.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bebc53f6671b51172c1e118e513aab27cbeff2764501", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Playground</title>
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css""
          integrity=""sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"" crossorigin=""anonymous"">
    <script src=""https://kit.fontawesome.com/edc645413f.js"" crossorigin=""anonymous""></script>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "bebc53f6671b51172c1e118e513aab27cbeff2765238", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bebc53f6671b51172c1e118e513aab27cbeff2767212", async() => {
                WriteLiteral(@"

    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-12 col-sm-3"">
                <div class=""row"">
                    <div class=""col-12 left-top text-center"">
                        <form action=""post"" class=""DiceForm m-auto"">
                            <label for=""DiceType"">Dice type</label>
                            <div class=""row"">

                                <div class=""col-sm-12 col-md-12 col-lg-6 form-group"">
                                    <select name=""diceType"" id=""DiceType"" class=""form-control"" required>
                                        <option value=""2"">D2</option>
                                        <option value=""4"">D4</option>
                                        <option value=""6"">D6</option>
                                        <option value=""8"">D8</option>
                                        <option value=""10"">D10</option>
                                        <option value=""12"">D12</option>
      ");
                WriteLiteral(@"                                  <option value=""20"">D20</option>
                                        <option value=""100"">D100</option>
                                    </select>
                                </div>
                                <div class=""col-sm-12 col-md-12 col-lg-6 form-group"">
                                    <select name=""diceAmount"" id=""diceAmount"" class=""diceAmount form-control"" required>
                                        <option value=""1"">x1</option>
                                        <option value=""2"">x2</option>
                                        <option value=""3"">x3</option>
                                        <option value=""4"">x4</option>
                                        <option value=""5"">x5</option>
                                    </select>
                                </div>

                            </div>
                            <div class=""row"">
                                <div class=""col-sm-12 col-md");
                WriteLiteral(@"-12 col-lg-12"">
                                    <div class=""form-group"">
                                        <label for=""Modificator"">Modificator</label>
                                        <input type=""number"" class=""modificator form-control"" required min=""-50"" max=""50"" value=""0"">
                                    </div>
                                </div>
                                <div class=""col-sm-12 col-md-12 col-lg-12"">
                                    <div class=""form-group"">
                                        <label for=""Test"">Test</label>
                                        <select name=""Test"" id=""Test"" class=""test form-control"" required>
                                            <option value=""None"" selected>None</option>
                                            <option value=""Attack"">Attack WS</option>
                                            <option value=""Shot"">Shot BS</option>
                                            <option value=""Deffe");
                WriteLiteral(@"nce"">Dodge WS</option>
                                            <option value=""Gossip"">Gossip WP</option>
                                            <option value=""Perceptivity"">Perceptivity INT</option>
                                            <option value=""Intimidation"">Intimidation S</option>
                                            <option value=""Drinking God"">Drinking God T</option>
                                            <option value=""Sneaking"">Sneaking AG</option>
                                            <option value=""Bargain"">Bargain FEL</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-sm-12 col-md-6 col-lg-6"">
                                    <button type=""button"" class=""p-2 my-2 btn-danger back btn btn-outline-dark"">Go back!</button>
            ");
                WriteLiteral(@"                    </div>
                                <div class=""col-sm-12 col-md-6 col-lg-6"">
                                    <button type=""button"" class=""p-2 my-2 go btn btn-success btn-outline-dark"">Roll the dice!</button>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-12 DYSPLAY-1 left-bottom"">
                        <div id=""result"" class=""h6 result-all""></div>
                    </div>
                </div>
            </div>
            <div class=""col-12 col-sm-9 text-center"">
                <div class=""row"">
                    <div class=""right-player"">
                        <table class=""col-sm-12 col-md-12 col-lg-12"">
                            <thead>
                                <h1 class=""DYSPLAY-1"">Hero Name</h1>
                            </thead>
                          ");
                WriteLiteral(@"  <tbody>
                                <tr>
                                    <td>
                                        Gender:
                                    </td>
                                    <td>
                                        aaaa
                                    </td>
                                    <td>
                                        Race:
                                    </td>
                                    <td>
                                        bbbbb
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Profession:
                                    </td>
                                    <td>
                                        ccccc
                                    </td>
                                    <td>
                                        Age:
           ");
                WriteLiteral(@"                         </td>
                                    <td>
                                        ddddd
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-6 right-equ"">
                        <table>
                            <thead>
                                <p>equipment</p>
                            </thead>
                            <tbody>
                                <p>1</p>
                            </tbody>
                        </table>
                    </div>
                    <div class=""col-sm-12 col-md-12 col-lg-6 right-skills"">
                        <table>
                            <thead>
                                <p>skills</p>
                            </thead>
                   ");
                WriteLiteral(@"         <tbody>
                                <p>1</p>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12 col-md-12 col-lg-6"">
                        <table class=""table table-warning table-striped table-borderless table-hover table-sm"">
                            <thead class=""thead-dark"">
                                <tr>
                                    <th scope=""row"" colspan=""9"">Statistic</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope=""row"" title=""Attribute"">Trait</th>
                                    <th scope=""col"" title=""Wepon Skill"">WS</th>
                                    <th scope=""col"" title=""Ballistic Skill"">BS</th>
                                    <th scope=""col"" ti");
                WriteLiteral(@"tle=""Strength"">S</th>
                                    <th scope=""col"" title=""Toughness"">T</th>
                                    <th scope=""col"" title=""Agility"">AG</th>
                                    <th scope=""col"" title=""Intelligence"">INT</th>
                                    <th scope=""col"" title=""Will Power"">WP</th>
                                    <th scope=""col"" title=""Fellowship"">FEL</th>
                                </tr>
                                <tr>
                                    <th scope=""row"">Base</th>
                                    <td scope=""col"" class=""WS"">50</td>
                                    <td scope=""col"" class=""BS"">50</td>
                                    <td scope=""col"" class=""S"">50</td>
                                    <td scope=""col"" class=""T"">50</td>
                                    <td scope=""col"" class=""AG"">50</td>
                                    <td scope=""col"" class=""INT"">50</td>
                               ");
                WriteLiteral(@"     <td scope=""col"" class=""WP"">50</td>
                                    <td scope=""col"" class=""FEL"">50</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class=""col-sm-12 col-md-12 col-lg-6"">
                        <table class=""table table-warning table-striped table-borderless table-hover table-sm"">
                            <thead class=""thead-dark"">
                                <tr>
                                    <th scope=""row"" colspan=""9"">Statistic</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <th scope=""row"" title=""Attribute"">Trait</th>
                                    <th scope=""col"" title=""Attack"">A</th>
                                    <th scope=""col"" title=""Wounds"">W</th>
                                    ");
                WriteLiteral(@"<th scope=""col"" title=""Strength Bonus"">SB</th>
                                    <th scope=""col"" title=""Toughness Bonus"">TB</th>
                                    <th scope=""col"" title=""Movement"">M</th>
                                    <th scope=""col"" title=""Magic"">MAG</th>
                                    <th scope=""col"" title=""Insanity Points"">IP</th>
                                    <th scope=""col"" title=""Fate Points"">FP</th>
                                </tr>
                                <tr>
                                    <th scope=""row"">Base</th>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                                    <td scope=""col""></td>
                   ");
                WriteLiteral(@"                 <td scope=""col""></td>
                                </tr>

                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
    </div>

    <script src=""https://code.jquery.com/jquery-3.4.1.slim.min.js""
            integrity=""sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"" crossorigin=""anonymous"">
    </script>
    <script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js""
            integrity=""sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"" crossorigin=""anonymous"">
    </script>
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js""
            integrity=""sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"" crossorigin=""anonymous"">
    </script>
    <script src=""/JavaScript/Playground.js""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
